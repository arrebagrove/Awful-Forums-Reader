<Page
    x:Name="pageRoot"
    x:Class="AwfulForumsReader.Pages.PrivateMessageListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AwfulForumsReader.Pages"
    xmlns:common="using:AwfulForumsReader.Common"
    DataContext="{Binding Source={StaticResource Locator}, Path=PrivateMessageVm}"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <Page.Resources>
        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">My Application</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="wideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="backButton.Visibility" Value="Visible"/>
                        <Setter Target="pageTitle.FontSize" Value="50"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="narrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="backButton.Visibility" Value="Collapsed"/>
                        <Setter Target="pageTitle.FontSize" Value="30"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <!-- Back button and page title -->
        <Grid Background="{StaticResource AwfulBlue}" RequestedTheme="Dark">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton"
                    Width="120"
                    Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    AutomationProperties.Name="Back"
                    AutomationProperties.AutomationId="BackButton"
                    AutomationProperties.ItemType="Navigation Button" RequestedTheme="Dark" />
            <TextBlock Margin="5,0,0,0" x:Name="pageTitle" Text="Private Messages" Style="{StaticResource HeaderTextBlockStyle}" Grid.Column="1"
                       IsHitTestVisible="false" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" />
        </Grid>
        <Grid Grid.Row="1">
            <Grid Canvas.ZIndex="1" Visibility="{Binding PrivateMessageScrollingCollection.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <ProgressBar VerticalAlignment="Center" IsIndeterminate="True" Height="50"/>
                <Rectangle Fill="White" Opacity=".5"/>
            </Grid>
            <ListView RequestedTheme="Light"  x:Name="PrivateMessageList" ItemsSource="{Binding PrivateMessageScrollingCollection}"
                      HorizontalAlignment="Stretch" IsSwipeEnabled="True" Grid.Column="0" SelectionMode="Extended"
                      IsItemClickEnabled="True">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{Binding NavigateToPrivateMessagePageCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.Background>
                                <SolidColorBrush Color="#F1F1F1" Opacity="{Binding Converter={StaticResource BackgroundWallpaperOpacityConverter}}"></SolidColorBrush>
                            </Grid.Background>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Height="5"
                                  Background="Black" />
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}"
                                        Grid.Column="0" Width="16" Height="16">
                                    <Image Source="{Binding Status}"
                                           AutomationProperties.Name="{Binding Title}" />
                                </Border>
                                <Border Background="Transparent"
                                        Grid.Column="1" Width="60" Height="60">
                                    <Image Source="{Binding Icon}"
                                           AutomationProperties.Name="{Binding Title}" />
                                </Border>
                                <StackPanel Grid.Column="2">
                                    <TextBlock x:Name="ThreadTitle" FontWeight="Bold" TextWrapping="Wrap"
                                               Text="{Binding Title}" />
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Sender:" />
                                        <TextBlock x:Name="TotalPages" Margin="5,0,0,0" Text="{Binding Sender}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Date:" Margin="0,0,0,0" />
                                        <TextBlock Text="{Binding Date}" Margin="5,0,0,0" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Label="New PM" Icon="Add">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:InvokeCommandAction Command="{Binding NavigateToNewPrivateMessagePageCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <AppBarButton x:Name="RefreshButton" Icon="Refresh" Label="Refresh">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:InvokeCommandAction Command="{Binding RefreshPrivateMessageListCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
